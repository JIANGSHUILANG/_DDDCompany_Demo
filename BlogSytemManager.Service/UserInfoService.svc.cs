// ******************************************************
// DO NOT CHANGE THE CONTENT OF THIS FILE
// This file was generated by the T4 engine and the 
// contents of this source code will be changed after
// the custom tool was run.
// ******************************************************
using BlogSytemManager.Application;
using BlogSytemManager.DomainObject;
using BlogSytemManager.DomainObject._PageOfItems;
using BlogSytemManager.IService;
using BolgSytemManager.Domain.Model;
using BlogSytemManager.Infrastructure;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.ServiceModel;
using System.ServiceModel.Web;
using System.Text;
using System.Xml.Linq;


namespace BlogSytemManager.Service
{
    // 注意: 使用“重构”菜单上的“重命名”命令，可以同时更改代码、svc 和配置文件中的类名“Service1”。
    // 注意: 为了启动 WCF 测试客户端以测试此服务，请在解决方案资源管理器中选择 Service1.svc 或 Service1.svc.cs，然后开始调试。

    //WCF服务实现代码修改如下，为了在客户端显示服务端发生的异常信息，在服务实现类添加[ServiceBehavior(IncludeExceptionDetailInFaults = true)]特性：
    [ServiceBehavior(InstanceContextMode = InstanceContextMode.PerSession,IncludeExceptionDetailInFaults = true)]

public partial class UserInfoService : IUserInfoService
   {
		  private readonly IUserInfoService userinfoserviceImpl = new UserInfoServiceImpl();
				public UserInfoObject[] GetAllUserInfo()
		{
		return userinfoserviceImpl.GetAllUserInfo();
		}
		public UserInfoObject GetUserInfoById(Object id)
		{
		return userinfoserviceImpl.GetUserInfoById(id);
		}
		public UserInfoObjectPageOfItems GetUserInfopageOfitems(Int32 pageIndex, Int32 pageSize, UserInfoObjectPageOfItems pageofitems)
		{
		return userinfoserviceImpl.GetUserInfopageOfitems(pageIndex, pageSize, pageofitems);
		}
		public Boolean DeleteUserInfoById(Object id)
		{
		return userinfoserviceImpl.DeleteUserInfoById(id);
		}
		public Boolean DeleteUserInfos(String[] ids)
		{
		return userinfoserviceImpl.DeleteUserInfos(ids);
		}
		public Boolean UpdateUserInfo(UserInfoObject obj)
		{
		return userinfoserviceImpl.UpdateUserInfo(obj);
		}
		public Boolean UpdateUserInfos(UserInfoObject[] objs)
		{
		return userinfoserviceImpl.UpdateUserInfos(objs);
		}
		public UserInfoObject CreateUserInfo(UserInfoObject obj)
		{
		return userinfoserviceImpl.CreateUserInfo(obj);
		}
		public Boolean ForUserInfoAutor(String CURDS, String MENUS, String ACTIONS, Int32 RoleId, Int32 UserID)
		{
		return userinfoserviceImpl.ForUserInfoAutor(CURDS, MENUS, ACTIONS, RoleId, UserID);
		}
		public void Dispose() { userinfoserviceImpl.Dispose(); }
	}
}


