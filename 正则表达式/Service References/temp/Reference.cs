//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18063
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace 正则表达式.temp {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfoObject", Namespace="http://schemas.datacontract.org/2004/07/BlogSytemManager.DomainObject", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class UserInfoObject : 正则表达式.temp.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private 正则表达式.temp.ActionInfoObject[] ActionInfosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RegTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private 正则表达式.temp.RoleObject[] RolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserPassField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public 正则表达式.temp.ActionInfoObject[] ActionInfos {
            get {
                return this.ActionInfosField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionInfosField, value) != true)) {
                    this.ActionInfosField = value;
                    this.RaisePropertyChanged("ActionInfos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RegTime {
            get {
                return this.RegTimeField;
            }
            set {
                if ((this.RegTimeField.Equals(value) != true)) {
                    this.RegTimeField = value;
                    this.RaisePropertyChanged("RegTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public 正则表达式.temp.RoleObject[] Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserPass {
            get {
                return this.UserPassField;
            }
            set {
                if ((object.ReferenceEquals(this.UserPassField, value) != true)) {
                    this.UserPassField = value;
                    this.RaisePropertyChanged("UserPass");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseObject", Namespace="http://schemas.datacontract.org/2004/07/BlogSytemManager.DomainObject", IsReference=true)]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(正则表达式.temp.ActionInfoObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(正则表达式.temp.RoleObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(正则表达式.temp.UserInfoObject))]
    public partial class BaseObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActionInfoObject", Namespace="http://schemas.datacontract.org/2004/07/BlogSytemManager.DomainObject", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ActionInfoObject : 正则表达式.temp.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionInfoNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DelFalgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short HttpMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private 正则表达式.temp.RoleObject[] RolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SubTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private 正则表达式.temp.UserInfoObject[] UserInfosField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActionInfoName {
            get {
                return this.ActionInfoNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionInfoNameField, value) != true)) {
                    this.ActionInfoNameField = value;
                    this.RaisePropertyChanged("ActionInfoName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DelFalg {
            get {
                return this.DelFalgField;
            }
            set {
                if ((this.DelFalgField.Equals(value) != true)) {
                    this.DelFalgField = value;
                    this.RaisePropertyChanged("DelFalg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short HttpMethod {
            get {
                return this.HttpMethodField;
            }
            set {
                if ((this.HttpMethodField.Equals(value) != true)) {
                    this.HttpMethodField = value;
                    this.RaisePropertyChanged("HttpMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMenu {
            get {
                return this.IsMenuField;
            }
            set {
                if ((this.IsMenuField.Equals(value) != true)) {
                    this.IsMenuField = value;
                    this.RaisePropertyChanged("IsMenu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public 正则表达式.temp.RoleObject[] Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SubTime {
            get {
                return this.SubTimeField;
            }
            set {
                if ((this.SubTimeField.Equals(value) != true)) {
                    this.SubTimeField = value;
                    this.RaisePropertyChanged("SubTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public 正则表达式.temp.UserInfoObject[] UserInfos {
            get {
                return this.UserInfosField;
            }
            set {
                if ((object.ReferenceEquals(this.UserInfosField, value) != true)) {
                    this.UserInfosField = value;
                    this.RaisePropertyChanged("UserInfos");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoleObject", Namespace="http://schemas.datacontract.org/2004/07/BlogSytemManager.DomainObject", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class RoleObject : 正则表达式.temp.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private 正则表达式.temp.ActionInfoObject[] ActionInfosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DelFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RoleTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SubTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private 正则表达式.temp.UserInfoObject[] UserInfosField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public 正则表达式.temp.ActionInfoObject[] ActionInfos {
            get {
                return this.ActionInfosField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionInfosField, value) != true)) {
                    this.ActionInfosField = value;
                    this.RaisePropertyChanged("ActionInfos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DelFlag {
            get {
                return this.DelFlagField;
            }
            set {
                if ((this.DelFlagField.Equals(value) != true)) {
                    this.DelFlagField = value;
                    this.RaisePropertyChanged("DelFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short RoleType {
            get {
                return this.RoleTypeField;
            }
            set {
                if ((this.RoleTypeField.Equals(value) != true)) {
                    this.RoleTypeField = value;
                    this.RaisePropertyChanged("RoleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SubTime {
            get {
                return this.SubTimeField;
            }
            set {
                if ((this.SubTimeField.Equals(value) != true)) {
                    this.SubTimeField = value;
                    this.RaisePropertyChanged("SubTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public 正则表达式.temp.UserInfoObject[] UserInfos {
            get {
                return this.UserInfosField;
            }
            set {
                if ((object.ReferenceEquals(this.UserInfosField, value) != true)) {
                    this.UserInfosField = value;
                    this.RaisePropertyChanged("UserInfos");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfoObjectPageOfItems", Namespace="http://schemas.datacontract.org/2004/07/BlogSytemManager.DomainObject", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class UserInfoObjectPageOfItems : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private 正则表达式.temp.UserInfoObject[] UserInfoObjectListsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public 正则表达式.temp.UserInfoObject[] UserInfoObjectLists {
            get {
                return this.UserInfoObjectListsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserInfoObjectListsField, value) != true)) {
                    this.UserInfoObjectListsField = value;
                    this.RaisePropertyChanged("UserInfoObjectLists");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.CC.com", ConfigurationName="temp.IUserInfoService")]
    public interface IUserInfoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.CC.com/IUserInfoService/GetAllUserInfo", ReplyAction="http://www.CC.com/IUserInfoService/GetAllUserInfoResponse")]
        正则表达式.temp.UserInfoObject[] GetAllUserInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.CC.com/IUserInfoService/GetAllUserInfo", ReplyAction="http://www.CC.com/IUserInfoService/GetAllUserInfoResponse")]
        System.Threading.Tasks.Task<正则表达式.temp.UserInfoObject[]> GetAllUserInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.CC.com/IUserInfoService/GetUserInfoById", ReplyAction="http://www.CC.com/IUserInfoService/GetUserInfoByIdResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(正则表达式.temp.UserInfoObject[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(正则表达式.temp.UserInfoObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(正则表达式.temp.BaseObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(正则表达式.temp.ActionInfoObject[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(正则表达式.temp.ActionInfoObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(正则表达式.temp.RoleObject[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(正则表达式.temp.RoleObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(正则表达式.temp.UserInfoObjectPageOfItems))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        正则表达式.temp.UserInfoObject GetUserInfoById(object id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.CC.com/IUserInfoService/GetUserInfoById", ReplyAction="http://www.CC.com/IUserInfoService/GetUserInfoByIdResponse")]
        System.Threading.Tasks.Task<正则表达式.temp.UserInfoObject> GetUserInfoByIdAsync(object id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.CC.com/IUserInfoService/GetUserInfopageOfitems", ReplyAction="http://www.CC.com/IUserInfoService/GetUserInfopageOfitemsResponse")]
        正则表达式.temp.UserInfoObjectPageOfItems GetUserInfopageOfitems(int pageIndex, int pageSize, 正则表达式.temp.UserInfoObjectPageOfItems pageofitems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.CC.com/IUserInfoService/GetUserInfopageOfitems", ReplyAction="http://www.CC.com/IUserInfoService/GetUserInfopageOfitemsResponse")]
        System.Threading.Tasks.Task<正则表达式.temp.UserInfoObjectPageOfItems> GetUserInfopageOfitemsAsync(int pageIndex, int pageSize, 正则表达式.temp.UserInfoObjectPageOfItems pageofitems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.CC.com/IUserInfoService/DeleteUserInfoById", ReplyAction="http://www.CC.com/IUserInfoService/DeleteUserInfoByIdResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(正则表达式.temp.UserInfoObject[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(正则表达式.temp.UserInfoObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(正则表达式.temp.BaseObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(正则表达式.temp.ActionInfoObject[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(正则表达式.temp.ActionInfoObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(正则表达式.temp.RoleObject[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(正则表达式.temp.RoleObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(正则表达式.temp.UserInfoObjectPageOfItems))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        bool DeleteUserInfoById(object id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.CC.com/IUserInfoService/DeleteUserInfoById", ReplyAction="http://www.CC.com/IUserInfoService/DeleteUserInfoByIdResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserInfoByIdAsync(object id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.CC.com/IUserInfoService/DeleteUserInfos", ReplyAction="http://www.CC.com/IUserInfoService/DeleteUserInfosResponse")]
        bool DeleteUserInfos(string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.CC.com/IUserInfoService/DeleteUserInfos", ReplyAction="http://www.CC.com/IUserInfoService/DeleteUserInfosResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserInfosAsync(string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.CC.com/IUserInfoService/UpdateUserInfo", ReplyAction="http://www.CC.com/IUserInfoService/UpdateUserInfoResponse")]
        bool UpdateUserInfo(正则表达式.temp.UserInfoObject obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.CC.com/IUserInfoService/UpdateUserInfo", ReplyAction="http://www.CC.com/IUserInfoService/UpdateUserInfoResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserInfoAsync(正则表达式.temp.UserInfoObject obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.CC.com/IUserInfoService/UpdateUserInfos", ReplyAction="http://www.CC.com/IUserInfoService/UpdateUserInfosResponse")]
        bool UpdateUserInfos(正则表达式.temp.UserInfoObject[] objs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.CC.com/IUserInfoService/UpdateUserInfos", ReplyAction="http://www.CC.com/IUserInfoService/UpdateUserInfosResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserInfosAsync(正则表达式.temp.UserInfoObject[] objs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.CC.com/IUserInfoService/CreateUserInfo", ReplyAction="http://www.CC.com/IUserInfoService/CreateUserInfoResponse")]
        bool CreateUserInfo(正则表达式.temp.UserInfoObject obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.CC.com/IUserInfoService/CreateUserInfo", ReplyAction="http://www.CC.com/IUserInfoService/CreateUserInfoResponse")]
        System.Threading.Tasks.Task<bool> CreateUserInfoAsync(正则表达式.temp.UserInfoObject obj);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserInfoServiceChannel : 正则表达式.temp.IUserInfoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserInfoServiceClient : System.ServiceModel.ClientBase<正则表达式.temp.IUserInfoService>, 正则表达式.temp.IUserInfoService {
        
        public UserInfoServiceClient() {
        }
        
        public UserInfoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserInfoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserInfoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserInfoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public 正则表达式.temp.UserInfoObject[] GetAllUserInfo() {
            return base.Channel.GetAllUserInfo();
        }
        
        public System.Threading.Tasks.Task<正则表达式.temp.UserInfoObject[]> GetAllUserInfoAsync() {
            return base.Channel.GetAllUserInfoAsync();
        }
        
        public 正则表达式.temp.UserInfoObject GetUserInfoById(object id) {
            return base.Channel.GetUserInfoById(id);
        }
        
        public System.Threading.Tasks.Task<正则表达式.temp.UserInfoObject> GetUserInfoByIdAsync(object id) {
            return base.Channel.GetUserInfoByIdAsync(id);
        }
        
        public 正则表达式.temp.UserInfoObjectPageOfItems GetUserInfopageOfitems(int pageIndex, int pageSize, 正则表达式.temp.UserInfoObjectPageOfItems pageofitems) {
            return base.Channel.GetUserInfopageOfitems(pageIndex, pageSize, pageofitems);
        }
        
        public System.Threading.Tasks.Task<正则表达式.temp.UserInfoObjectPageOfItems> GetUserInfopageOfitemsAsync(int pageIndex, int pageSize, 正则表达式.temp.UserInfoObjectPageOfItems pageofitems) {
            return base.Channel.GetUserInfopageOfitemsAsync(pageIndex, pageSize, pageofitems);
        }
        
        public bool DeleteUserInfoById(object id) {
            return base.Channel.DeleteUserInfoById(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserInfoByIdAsync(object id) {
            return base.Channel.DeleteUserInfoByIdAsync(id);
        }
        
        public bool DeleteUserInfos(string[] ids) {
            return base.Channel.DeleteUserInfos(ids);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserInfosAsync(string[] ids) {
            return base.Channel.DeleteUserInfosAsync(ids);
        }
        
        public bool UpdateUserInfo(正则表达式.temp.UserInfoObject obj) {
            return base.Channel.UpdateUserInfo(obj);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserInfoAsync(正则表达式.temp.UserInfoObject obj) {
            return base.Channel.UpdateUserInfoAsync(obj);
        }
        
        public bool UpdateUserInfos(正则表达式.temp.UserInfoObject[] objs) {
            return base.Channel.UpdateUserInfos(objs);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserInfosAsync(正则表达式.temp.UserInfoObject[] objs) {
            return base.Channel.UpdateUserInfosAsync(objs);
        }
        
        public bool CreateUserInfo(正则表达式.temp.UserInfoObject obj) {
            return base.Channel.CreateUserInfo(obj);
        }
        
        public System.Threading.Tasks.Task<bool> CreateUserInfoAsync(正则表达式.temp.UserInfoObject obj) {
            return base.Channel.CreateUserInfoAsync(obj);
        }
    }
}
