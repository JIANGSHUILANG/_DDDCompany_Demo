//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18063
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace 正则表达式.Roleservice {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoleObject", Namespace="http://schemas.datacontract.org/2004/07/BlogSytemManager.DomainObject", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class RoleObject : 正则表达式.Roleservice.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private 正则表达式.Roleservice.ActionInfoObject[] ActionInfosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DelFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RoleTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SubTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private 正则表达式.Roleservice.UserInfoObject[] UserInfosField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public 正则表达式.Roleservice.ActionInfoObject[] ActionInfos {
            get {
                return this.ActionInfosField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionInfosField, value) != true)) {
                    this.ActionInfosField = value;
                    this.RaisePropertyChanged("ActionInfos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DelFlag {
            get {
                return this.DelFlagField;
            }
            set {
                if ((this.DelFlagField.Equals(value) != true)) {
                    this.DelFlagField = value;
                    this.RaisePropertyChanged("DelFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short RoleType {
            get {
                return this.RoleTypeField;
            }
            set {
                if ((this.RoleTypeField.Equals(value) != true)) {
                    this.RoleTypeField = value;
                    this.RaisePropertyChanged("RoleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SubTime {
            get {
                return this.SubTimeField;
            }
            set {
                if ((this.SubTimeField.Equals(value) != true)) {
                    this.SubTimeField = value;
                    this.RaisePropertyChanged("SubTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public 正则表达式.Roleservice.UserInfoObject[] UserInfos {
            get {
                return this.UserInfosField;
            }
            set {
                if ((object.ReferenceEquals(this.UserInfosField, value) != true)) {
                    this.UserInfosField = value;
                    this.RaisePropertyChanged("UserInfos");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseObject", Namespace="http://schemas.datacontract.org/2004/07/BlogSytemManager.DomainObject", IsReference=true)]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(正则表达式.Roleservice.ActionInfoObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(正则表达式.Roleservice.UserInfoObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(正则表达式.Roleservice.RoleObject))]
    public partial class BaseObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActionInfoObject", Namespace="http://schemas.datacontract.org/2004/07/BlogSytemManager.DomainObject", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ActionInfoObject : 正则表达式.Roleservice.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionInfoNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DelFalgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short HttpMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private 正则表达式.Roleservice.RoleObject[] RolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SubTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private 正则表达式.Roleservice.UserInfoObject[] UserInfosField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActionInfoName {
            get {
                return this.ActionInfoNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionInfoNameField, value) != true)) {
                    this.ActionInfoNameField = value;
                    this.RaisePropertyChanged("ActionInfoName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DelFalg {
            get {
                return this.DelFalgField;
            }
            set {
                if ((this.DelFalgField.Equals(value) != true)) {
                    this.DelFalgField = value;
                    this.RaisePropertyChanged("DelFalg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short HttpMethod {
            get {
                return this.HttpMethodField;
            }
            set {
                if ((this.HttpMethodField.Equals(value) != true)) {
                    this.HttpMethodField = value;
                    this.RaisePropertyChanged("HttpMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMenu {
            get {
                return this.IsMenuField;
            }
            set {
                if ((this.IsMenuField.Equals(value) != true)) {
                    this.IsMenuField = value;
                    this.RaisePropertyChanged("IsMenu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public 正则表达式.Roleservice.RoleObject[] Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SubTime {
            get {
                return this.SubTimeField;
            }
            set {
                if ((this.SubTimeField.Equals(value) != true)) {
                    this.SubTimeField = value;
                    this.RaisePropertyChanged("SubTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public 正则表达式.Roleservice.UserInfoObject[] UserInfos {
            get {
                return this.UserInfosField;
            }
            set {
                if ((object.ReferenceEquals(this.UserInfosField, value) != true)) {
                    this.UserInfosField = value;
                    this.RaisePropertyChanged("UserInfos");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfoObject", Namespace="http://schemas.datacontract.org/2004/07/BlogSytemManager.DomainObject", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class UserInfoObject : 正则表达式.Roleservice.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private 正则表达式.Roleservice.ActionInfoObject[] ActionInfosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RegTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private 正则表达式.Roleservice.RoleObject[] RolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserPassField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public 正则表达式.Roleservice.ActionInfoObject[] ActionInfos {
            get {
                return this.ActionInfosField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionInfosField, value) != true)) {
                    this.ActionInfosField = value;
                    this.RaisePropertyChanged("ActionInfos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RegTime {
            get {
                return this.RegTimeField;
            }
            set {
                if ((this.RegTimeField.Equals(value) != true)) {
                    this.RegTimeField = value;
                    this.RaisePropertyChanged("RegTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public 正则表达式.Roleservice.RoleObject[] Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserPass {
            get {
                return this.UserPassField;
            }
            set {
                if ((object.ReferenceEquals(this.UserPassField, value) != true)) {
                    this.UserPassField = value;
                    this.RaisePropertyChanged("UserPass");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.CC.com", ConfigurationName="Roleservice.IRoleService")]
    public interface IRoleService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.CC.com/IRoleService/GetAllRole", ReplyAction="http://www.CC.com/IRoleService/GetAllRoleResponse")]
        正则表达式.Roleservice.RoleObject[] GetAllRole();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.CC.com/IRoleService/GetAllRole", ReplyAction="http://www.CC.com/IRoleService/GetAllRoleResponse")]
        System.Threading.Tasks.Task<正则表达式.Roleservice.RoleObject[]> GetAllRoleAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.CC.com/IRoleService/GetRoleById", ReplyAction="http://www.CC.com/IRoleService/GetRoleByIdResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(正则表达式.Roleservice.RoleObject[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(正则表达式.Roleservice.RoleObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(正则表达式.Roleservice.BaseObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(正则表达式.Roleservice.ActionInfoObject[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(正则表达式.Roleservice.ActionInfoObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(正则表达式.Roleservice.UserInfoObject[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(正则表达式.Roleservice.UserInfoObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        正则表达式.Roleservice.RoleObject GetRoleById(object id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.CC.com/IRoleService/GetRoleById", ReplyAction="http://www.CC.com/IRoleService/GetRoleByIdResponse")]
        System.Threading.Tasks.Task<正则表达式.Roleservice.RoleObject> GetRoleByIdAsync(object id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.CC.com/IRoleService/DeleteRoleById", ReplyAction="http://www.CC.com/IRoleService/DeleteRoleByIdResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(正则表达式.Roleservice.RoleObject[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(正则表达式.Roleservice.RoleObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(正则表达式.Roleservice.BaseObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(正则表达式.Roleservice.ActionInfoObject[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(正则表达式.Roleservice.ActionInfoObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(正则表达式.Roleservice.UserInfoObject[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(正则表达式.Roleservice.UserInfoObject))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        bool DeleteRoleById(object id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.CC.com/IRoleService/DeleteRoleById", ReplyAction="http://www.CC.com/IRoleService/DeleteRoleByIdResponse")]
        System.Threading.Tasks.Task<bool> DeleteRoleByIdAsync(object id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.CC.com/IRoleService/DeleteRoles", ReplyAction="http://www.CC.com/IRoleService/DeleteRolesResponse")]
        bool DeleteRoles(string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.CC.com/IRoleService/DeleteRoles", ReplyAction="http://www.CC.com/IRoleService/DeleteRolesResponse")]
        System.Threading.Tasks.Task<bool> DeleteRolesAsync(string[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.CC.com/IRoleService/UpdateRole", ReplyAction="http://www.CC.com/IRoleService/UpdateRoleResponse")]
        bool UpdateRole(正则表达式.Roleservice.RoleObject obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.CC.com/IRoleService/UpdateRole", ReplyAction="http://www.CC.com/IRoleService/UpdateRoleResponse")]
        System.Threading.Tasks.Task<bool> UpdateRoleAsync(正则表达式.Roleservice.RoleObject obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.CC.com/IRoleService/UpdateRoles", ReplyAction="http://www.CC.com/IRoleService/UpdateRolesResponse")]
        bool UpdateRoles(正则表达式.Roleservice.RoleObject[] objs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.CC.com/IRoleService/UpdateRoles", ReplyAction="http://www.CC.com/IRoleService/UpdateRolesResponse")]
        System.Threading.Tasks.Task<bool> UpdateRolesAsync(正则表达式.Roleservice.RoleObject[] objs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.CC.com/IRoleService/CreateRole", ReplyAction="http://www.CC.com/IRoleService/CreateRoleResponse")]
        bool CreateRole(正则表达式.Roleservice.RoleObject obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.CC.com/IRoleService/CreateRole", ReplyAction="http://www.CC.com/IRoleService/CreateRoleResponse")]
        System.Threading.Tasks.Task<bool> CreateRoleAsync(正则表达式.Roleservice.RoleObject obj);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRoleServiceChannel : 正则表达式.Roleservice.IRoleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoleServiceClient : System.ServiceModel.ClientBase<正则表达式.Roleservice.IRoleService>, 正则表达式.Roleservice.IRoleService {
        
        public RoleServiceClient() {
        }
        
        public RoleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RoleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public 正则表达式.Roleservice.RoleObject[] GetAllRole() {
            return base.Channel.GetAllRole();
        }
        
        public System.Threading.Tasks.Task<正则表达式.Roleservice.RoleObject[]> GetAllRoleAsync() {
            return base.Channel.GetAllRoleAsync();
        }
        
        public 正则表达式.Roleservice.RoleObject GetRoleById(object id) {
            return base.Channel.GetRoleById(id);
        }
        
        public System.Threading.Tasks.Task<正则表达式.Roleservice.RoleObject> GetRoleByIdAsync(object id) {
            return base.Channel.GetRoleByIdAsync(id);
        }
        
        public bool DeleteRoleById(object id) {
            return base.Channel.DeleteRoleById(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteRoleByIdAsync(object id) {
            return base.Channel.DeleteRoleByIdAsync(id);
        }
        
        public bool DeleteRoles(string[] ids) {
            return base.Channel.DeleteRoles(ids);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteRolesAsync(string[] ids) {
            return base.Channel.DeleteRolesAsync(ids);
        }
        
        public bool UpdateRole(正则表达式.Roleservice.RoleObject obj) {
            return base.Channel.UpdateRole(obj);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRoleAsync(正则表达式.Roleservice.RoleObject obj) {
            return base.Channel.UpdateRoleAsync(obj);
        }
        
        public bool UpdateRoles(正则表达式.Roleservice.RoleObject[] objs) {
            return base.Channel.UpdateRoles(objs);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRolesAsync(正则表达式.Roleservice.RoleObject[] objs) {
            return base.Channel.UpdateRolesAsync(objs);
        }
        
        public bool CreateRole(正则表达式.Roleservice.RoleObject obj) {
            return base.Channel.CreateRole(obj);
        }
        
        public System.Threading.Tasks.Task<bool> CreateRoleAsync(正则表达式.Roleservice.RoleObject obj) {
            return base.Channel.CreateRoleAsync(obj);
        }
    }
}
