// ******************************************************
// DO NOT CHANGE THE CONTENT OF THIS FILE
// This file was generated by the T4 engine and the 
// contents of this source code will be changed after
// the custom tool was run.
// ******************************************************
using AutoMapper;
using AutoMapper.QueryableExtensions;
using BlogSytemManager.DomainObject;
using BlogSytemManager.DomainObject._PageOfItems;
using BlogSytemManager.Infrastructure.ExpressionHelper;
using BlogSytemManager.IService;
using BlogSytemManager.Repository.Repositories;
using BolgSytemManager.Domain.IRepositories;
using BolgSytemManager.Domain.Model;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;
using System.Text;
using System.Threading.Tasks;
using System.Xml.Linq;


namespace BlogSytemManager.Application
{

    public partial class MenuChildenServiceImpl : ApplicationServiceImpl<MenuChildenObject, MenuChilden>, IMenuChildenService
    {
        private static IMenuChildenRepository menuChildenRepository = new MenuChildenRepository();

        public MenuChildenServiceImpl()
            : base(menuChildenRepository)
        {

        }

        public MenuChildenObject[] GetAllMenuChilden()
        {
            return base.GetAllDataObject();
        }
        public MenuChildenObject GetMenuChildenById(Object id)
        {
            return base.GetDataObjectById(id);
        }
        public Boolean DeleteMenuChildenById(Object id)
        {
            return base.DeleteDataObjectById(id);
        }
        public Boolean DeleteMenuChildens(String[] ids)
        {
            return base.DeleteDataObjects(ids);
        }
        public Boolean UpdateMenuChilden(MenuChildenObject obj)
        {
            return base.UpdateDataObject(obj);
        }
        public Boolean UpdateMenuChildens(MenuChildenObject[] objs)
        {
            return base.UpdateDataObjects(objs);
        }
        public MenuChildenObject CreateMenuChilden(MenuChildenObject obj)
        {
            return base.CreateDataObject(obj);
        }
    }
}


